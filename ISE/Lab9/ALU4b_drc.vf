////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ALU4b_drc.vf
// /___/   /\     Timestamp : 12/12/2021 13:38:05
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: d:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog ALU4b_drc.vf -w C:/Users/49530/Desktop/ISE/NewLab9/ALU4b.sch
//Design Name: ALU4b
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_ALU4b (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_sch_MUSER_ALU4b(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 s, 
                                 O);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] O;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   
   INV  XLXI_1 (.I(s[0]), 
               .O(XLXN_5));
   INV  XLXI_2 (.I(s[1]), 
               .O(XLXN_6));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(XLXN_10));
   AND2  XLXI_4 (.I0(XLXN_6), 
                .I1(s[0]), 
                .O(XLXN_11));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_5), 
                .O(XLXN_13));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_14));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_10), 
                .O(XLXN_66));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_11), 
                .O(XLXN_67));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_13), 
                .O(XLXN_68));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_14), 
                 .O(XLXN_69));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_10), 
                 .O(XLXN_70));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_11), 
                 .O(XLXN_71));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_72));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_73));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_10), 
                 .O(XLXN_74));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_11), 
                 .O(XLXN_75));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_76));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_77));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_10), 
                 .O(XLXN_78));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_11), 
                 .O(XLXN_79));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_80));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_81));
   OR4  XLXI_39 (.I0(XLXN_69), 
                .I1(XLXN_68), 
                .I2(XLXN_67), 
                .I3(XLXN_66), 
                .O(O[0]));
   OR4  XLXI_40 (.I0(XLXN_73), 
                .I1(XLXN_72), 
                .I2(XLXN_71), 
                .I3(XLXN_70), 
                .O(O[1]));
   OR4  XLXI_41 (.I0(XLXN_77), 
                .I1(XLXN_76), 
                .I2(XLXN_75), 
                .I3(XLXN_74), 
                .O(O[2]));
   OR4  XLXI_42 (.I0(XLXN_81), 
                .I1(XLXN_80), 
                .I2(XLXN_79), 
                .I3(XLXN_78), 
                .O(O[3]));
endmodule
`timescale 1ns / 1ps

module MyOr2b4_MUSER_ALU4b(A, 
                           B, 
                           S);

    input [3:0] A;
    input [3:0] B;
   output [3:0] S;
   
   
   OR2  XLXI_5 (.I0(B[0]), 
               .I1(A[0]), 
               .O(S[0]));
   OR2  XLXI_6 (.I0(B[1]), 
               .I1(A[1]), 
               .O(S[1]));
   OR2  XLXI_7 (.I0(B[2]), 
               .I1(A[2]), 
               .O(S[2]));
   OR2  XLXI_8 (.I0(B[3]), 
               .I1(A[3]), 
               .O(S[3]));
endmodule
`timescale 1ns / 1ps

module MyAnd2b4_MUSER_ALU4b(A, 
                            B, 
                            S);

    input [3:0] A;
    input [3:0] B;
   output [3:0] S;
   
   
   AND2  XLXI_1 (.I0(B[0]), 
                .I1(A[0]), 
                .O(S[0]));
   AND2  XLXI_2 (.I0(B[1]), 
                .I1(A[1]), 
                .O(S[1]));
   AND2  XLXI_3 (.I0(B[2]), 
                .I1(A[2]), 
                .O(S[2]));
   AND2  XLXI_4 (.I0(B[3]), 
                .I1(A[3]), 
                .O(S[3]));
endmodule
`timescale 1ns / 1ps

module NewAddsub1b_MUSER_ALU4b(A, 
                               B, 
                               Cin, 
                               Ctrl, 
                               Cout, 
                               S);

    input A;
    input B;
    input Cin;
    input Ctrl;
   output Cout;
   output S;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_33;
   
   XOR2  XLXI_1 (.I0(XLXN_33), 
                .I1(A), 
                .O(XLXN_1));
   XOR2  XLXI_2 (.I0(Cin), 
                .I1(XLXN_1), 
                .O(S));
   OR2  XLXI_3 (.I0(XLXN_3), 
               .I1(XLXN_4), 
               .O(Cout));
   AND2  XLXI_4 (.I0(XLXN_33), 
                .I1(A), 
                .O(XLXN_3));
   AND2  XLXI_5 (.I0(Cin), 
                .I1(XLXN_1), 
                .O(XLXN_4));
   XOR2  XLXI_13 (.I0(Ctrl), 
                 .I1(B), 
                 .O(XLXN_33));
endmodule
`timescale 1ns / 1ps

module Addsub4b_MUSER_ALU4b(A, 
                            B, 
                            Ctrl, 
                            Co, 
                            S);

    input [3:0] A;
    input [3:0] B;
    input Ctrl;
   output Co;
   output [3:0] S;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   
   NewAddsub1b_MUSER_ALU4b  XLXI_6 (.A(A[2]), 
                                   .B(B[2]), 
                                   .Cin(XLXN_5), 
                                   .Ctrl(Ctrl), 
                                   .Cout(XLXN_6), 
                                   .S(S[2]));
   NewAddsub1b_MUSER_ALU4b  XLXI_7 (.A(A[1]), 
                                   .B(B[1]), 
                                   .Cin(XLXN_7), 
                                   .Ctrl(Ctrl), 
                                   .Cout(XLXN_5), 
                                   .S(S[1]));
   NewAddsub1b_MUSER_ALU4b  XLXI_8 (.A(A[0]), 
                                   .B(B[0]), 
                                   .Cin(Ctrl), 
                                   .Ctrl(Ctrl), 
                                   .Cout(XLXN_7), 
                                   .S(S[0]));
   NewAddsub1b_MUSER_ALU4b  XLXI_9 (.A(A[3]), 
                                   .B(B[3]), 
                                   .Cin(XLXN_6), 
                                   .Ctrl(Ctrl), 
                                   .Cout(Co), 
                                   .S(S[3]));
endmodule
`timescale 1ns / 1ps

module ALU4b(A, 
             B, 
             S, 
             Co, 
             O);

    input [3:0] A;
    input [3:0] B;
    input [1:0] S;
   output Co;
   output [3:0] O;
   
   wire XLXN_6;
   wire XLXN_12;
   wire XLXN_14;
   wire [3:0] XLXN_15;
   wire [3:0] XLXN_17;
   wire [3:0] XLXN_18;
   
   Addsub4b_MUSER_ALU4b  XLXI_1 (.A(A[3:0]), 
                                .B(B[3:0]), 
                                .Ctrl(S[0]), 
                                .Co(XLXN_6), 
                                .S(XLXN_15[3:0]));
   MyAnd2b4_MUSER_ALU4b  XLXI_2 (.A(A[3:0]), 
                                .B(B[3:0]), 
                                .S(XLXN_17[3:0]));
   MyOr2b4_MUSER_ALU4b  XLXI_3 (.A(A[3:0]), 
                               .B(B[3:0]), 
                               .S(XLXN_18[3:0]));
   Mux4to1b4_sch_MUSER_ALU4b  XLXI_4 (.I0(XLXN_15[3:0]), 
                                     .I1(XLXN_15[3:0]), 
                                     .I2(XLXN_17[3:0]), 
                                     .I3(XLXN_18[3:0]), 
                                     .s(S[1:0]), 
                                     .O(O[3:0]));
   (* HU_SET = "XLXI_5_0" *) 
   M4_1E_HXILINX_ALU4b  XLXI_5 (.D0(XLXN_6), 
                               .D1(XLXN_6), 
                               .D2(XLXN_14), 
                               .D3(XLXN_14), 
                               .E(XLXN_12), 
                               .S0(S[0]), 
                               .S1(S[1]), 
                               .O(Co));
   GND  XLXI_6 (.G(XLXN_14));
   VCC  XLXI_7 (.P(XLXN_12));
endmodule
